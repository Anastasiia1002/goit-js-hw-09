{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAYC,SAASC,cAAc,uBACnCC,EAAWF,SAASC,cAAc,sBAClCE,EAAaH,SAASC,cAAc,wBAkB1C,SAASG,EAAcC,EAAUC,GACf,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAGpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,MAEpBA,MAGFU,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,UAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAArB,GAASsB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,UApC5Df,SAASC,cAAc,SAE/BuB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IAJA,IAAIC,EAAS5B,EAAU6B,cACnBC,EAAS1B,EAAWyB,cACpBE,EAAO5B,EAAS0B,cAEXd,EAAW,EAAGA,GAAYe,EAAQf,GAAY,EACrDV,EAAcU,EAAUa,GACxBA,GAAUG,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n//import 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst delayForm = document.querySelector('input[name=\"delay\"]');\nconst stepForm = document.querySelector('input[name=\"step\"]');\nconst amountForm = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay1 = delayForm.valueAsNumber;\n  let amount = amountForm.valueAsNumber;\n  let step = stepForm.valueAsNumber;\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay1);\n    delay1 += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delayForm","document","querySelector","$ce04d3a99e08e73b$var$stepForm","$ce04d3a99e08e73b$var$amountForm","$ce04d3a99e08e73b$var$createPromise","position1","delay2","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","delay1","valueAsNumber","amount","step"],"version":3,"file":"03-promises.10287b97.js.map"}